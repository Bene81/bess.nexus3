/* 
 * Nexus Repository Manager REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.30.1-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Bess.IO.Rest.Nexus3.Client.SwaggerDateConverter;

namespace Bess.IO.Rest.Nexus3.Model
{
    /// <summary>
    /// ApiPrivilegeWildcardRequest
    /// </summary>
    [DataContract]
    public partial class ApiPrivilegeWildcardRequest :  IEquatable<ApiPrivilegeWildcardRequest>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApiPrivilegeWildcardRequest" /> class.
        /// </summary>
        /// <param name="name">The name of the privilege.  This value cannot be changed..</param>
        /// <param name="description">description.</param>
        /// <param name="pattern">A colon separated list of parts that create a permission string..</param>
        public ApiPrivilegeWildcardRequest(string name = default(string), string description = default(string), string pattern = default(string))
        {
            this.Name = name;
            this.Description = description;
            this.Pattern = pattern;
        }
        
        /// <summary>
        /// The name of the privilege.  This value cannot be changed.
        /// </summary>
        /// <value>The name of the privilege.  This value cannot be changed.</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// A colon separated list of parts that create a permission string.
        /// </summary>
        /// <value>A colon separated list of parts that create a permission string.</value>
        [DataMember(Name="pattern", EmitDefaultValue=false)]
        public string Pattern { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApiPrivilegeWildcardRequest {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Pattern: ").Append(Pattern).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApiPrivilegeWildcardRequest);
        }

        /// <summary>
        /// Returns true if ApiPrivilegeWildcardRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of ApiPrivilegeWildcardRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApiPrivilegeWildcardRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Pattern == input.Pattern ||
                    (this.Pattern != null &&
                    this.Pattern.Equals(input.Pattern))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Pattern != null)
                    hashCode = hashCode * 59 + this.Pattern.GetHashCode();
                return hashCode;
            }
        }
    }

}
