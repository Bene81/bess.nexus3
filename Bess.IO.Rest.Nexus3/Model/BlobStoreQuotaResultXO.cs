/* 
 * Nexus Repository Manager REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.30.1-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Bess.IO.Rest.Nexus3.Client.SwaggerDateConverter;

namespace Bess.IO.Rest.Nexus3.Model
{
    /// <summary>
    /// BlobStoreQuotaResultXO
    /// </summary>
    [DataContract]
    public partial class BlobStoreQuotaResultXO :  IEquatable<BlobStoreQuotaResultXO>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BlobStoreQuotaResultXO" /> class.
        /// </summary>
        /// <param name="isViolation">isViolation.</param>
        /// <param name="message">message.</param>
        /// <param name="blobStoreName">blobStoreName.</param>
        public BlobStoreQuotaResultXO(bool? isViolation = default(bool?), string message = default(string), string blobStoreName = default(string))
        {
            this.IsViolation = isViolation;
            this.Message = message;
            this.BlobStoreName = blobStoreName;
        }
        
        /// <summary>
        /// Gets or Sets IsViolation
        /// </summary>
        [DataMember(Name="isViolation", EmitDefaultValue=false)]
        public bool? IsViolation { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name="message", EmitDefaultValue=false)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or Sets BlobStoreName
        /// </summary>
        [DataMember(Name="blobStoreName", EmitDefaultValue=false)]
        public string BlobStoreName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BlobStoreQuotaResultXO {\n");
            sb.Append("  IsViolation: ").Append(IsViolation).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  BlobStoreName: ").Append(BlobStoreName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BlobStoreQuotaResultXO);
        }

        /// <summary>
        /// Returns true if BlobStoreQuotaResultXO instances are equal
        /// </summary>
        /// <param name="input">Instance of BlobStoreQuotaResultXO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BlobStoreQuotaResultXO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.IsViolation == input.IsViolation ||
                    (this.IsViolation != null &&
                    this.IsViolation.Equals(input.IsViolation))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                ) && 
                (
                    this.BlobStoreName == input.BlobStoreName ||
                    (this.BlobStoreName != null &&
                    this.BlobStoreName.Equals(input.BlobStoreName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.IsViolation != null)
                    hashCode = hashCode * 59 + this.IsViolation.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                if (this.BlobStoreName != null)
                    hashCode = hashCode * 59 + this.BlobStoreName.GetHashCode();
                return hashCode;
            }
        }
    }

}
