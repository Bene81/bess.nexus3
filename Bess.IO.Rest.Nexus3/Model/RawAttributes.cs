/* 
 * Nexus Repository Manager REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.30.1-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Bess.IO.Rest.Nexus3.Client.SwaggerDateConverter;

namespace Bess.IO.Rest.Nexus3.Model
{
    /// <summary>
    /// RawAttributes
    /// </summary>
    [DataContract]
    public partial class RawAttributes :  IEquatable<RawAttributes>
    {
        /// <summary>
        /// Content Disposition
        /// </summary>
        /// <value>Content Disposition</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ContentDispositionEnum
        {
            
            /// <summary>
            /// Enum INLINE for value: INLINE
            /// </summary>
            [EnumMember(Value = "INLINE")]
            INLINE = 1,
            
            /// <summary>
            /// Enum ATTACHMENT for value: ATTACHMENT
            /// </summary>
            [EnumMember(Value = "ATTACHMENT")]
            ATTACHMENT = 2
        }

        /// <summary>
        /// Content Disposition
        /// </summary>
        /// <value>Content Disposition</value>
        [DataMember(Name="contentDisposition", EmitDefaultValue=false)]
        public ContentDispositionEnum? ContentDisposition { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="RawAttributes" /> class.
        /// </summary>
        /// <param name="contentDisposition">Content Disposition.</param>
        public RawAttributes(ContentDispositionEnum? contentDisposition = default(ContentDispositionEnum?))
        {
            this.ContentDisposition = contentDisposition;
        }
        

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class RawAttributes {\n");
            sb.Append("  ContentDisposition: ").Append(ContentDisposition).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as RawAttributes);
        }

        /// <summary>
        /// Returns true if RawAttributes instances are equal
        /// </summary>
        /// <param name="input">Instance of RawAttributes to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RawAttributes input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ContentDisposition == input.ContentDisposition ||
                    (this.ContentDisposition != null &&
                    this.ContentDisposition.Equals(input.ContentDisposition))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ContentDisposition != null)
                    hashCode = hashCode * 59 + this.ContentDisposition.GetHashCode();
                return hashCode;
            }
        }
    }

}
