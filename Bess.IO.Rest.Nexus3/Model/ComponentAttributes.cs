/* 
 * Nexus Repository Manager REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.30.1-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Bess.IO.Rest.Nexus3.Client.SwaggerDateConverter;

namespace Bess.IO.Rest.Nexus3.Model
{
    /// <summary>
    /// ComponentAttributes
    /// </summary>
    [DataContract]
    public partial class ComponentAttributes :  IEquatable<ComponentAttributes>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComponentAttributes" /> class.
        /// </summary>
        /// <param name="proprietaryComponents">Components in this repository count as proprietary for namespace conflict attacks (requires Sonatype Nexus Firewall).</param>
        public ComponentAttributes(bool? proprietaryComponents = default(bool?))
        {
            this.ProprietaryComponents = proprietaryComponents;
        }
        
        /// <summary>
        /// Components in this repository count as proprietary for namespace conflict attacks (requires Sonatype Nexus Firewall)
        /// </summary>
        /// <value>Components in this repository count as proprietary for namespace conflict attacks (requires Sonatype Nexus Firewall)</value>
        [DataMember(Name="proprietaryComponents", EmitDefaultValue=false)]
        public bool? ProprietaryComponents { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComponentAttributes {\n");
            sb.Append("  ProprietaryComponents: ").Append(ProprietaryComponents).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ComponentAttributes);
        }

        /// <summary>
        /// Returns true if ComponentAttributes instances are equal
        /// </summary>
        /// <param name="input">Instance of ComponentAttributes to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComponentAttributes input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ProprietaryComponents == input.ProprietaryComponents ||
                    (this.ProprietaryComponents != null &&
                    this.ProprietaryComponents.Equals(input.ProprietaryComponents))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ProprietaryComponents != null)
                    hashCode = hashCode * 59 + this.ProprietaryComponents.GetHashCode();
                return hashCode;
            }
        }
    }

}
