/* 
 * Nexus Repository Manager REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.30.1-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Bess.IO.Rest.Nexus3.Client.SwaggerDateConverter;

namespace Bess.IO.Rest.Nexus3.Model
{
    /// <summary>
    /// FileBlobStoreApiCreateRequest
    /// </summary>
    [DataContract]
    public partial class FileBlobStoreApiCreateRequest :  IEquatable<FileBlobStoreApiCreateRequest>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FileBlobStoreApiCreateRequest" /> class.
        /// </summary>
        /// <param name="softQuota">Settings to control the soft quota.</param>
        /// <param name="path">The path to the blobstore contents. This can be an absolute path to anywhere on the system Nexus Repository Manager has access to or it can be a path relative to the sonatype-work directory..</param>
        /// <param name="name">name.</param>
        public FileBlobStoreApiCreateRequest(BlobStoreApiSoftQuota softQuota = default(BlobStoreApiSoftQuota), string path = default(string), string name = default(string))
        {
            this.SoftQuota = softQuota;
            this.Path = path;
            this.Name = name;
        }
        
        /// <summary>
        /// Settings to control the soft quota
        /// </summary>
        /// <value>Settings to control the soft quota</value>
        [DataMember(Name="softQuota", EmitDefaultValue=false)]
        public BlobStoreApiSoftQuota SoftQuota { get; set; }

        /// <summary>
        /// The path to the blobstore contents. This can be an absolute path to anywhere on the system Nexus Repository Manager has access to or it can be a path relative to the sonatype-work directory.
        /// </summary>
        /// <value>The path to the blobstore contents. This can be an absolute path to anywhere on the system Nexus Repository Manager has access to or it can be a path relative to the sonatype-work directory.</value>
        [DataMember(Name="path", EmitDefaultValue=false)]
        public string Path { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FileBlobStoreApiCreateRequest {\n");
            sb.Append("  SoftQuota: ").Append(SoftQuota).Append("\n");
            sb.Append("  Path: ").Append(Path).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FileBlobStoreApiCreateRequest);
        }

        /// <summary>
        /// Returns true if FileBlobStoreApiCreateRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of FileBlobStoreApiCreateRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FileBlobStoreApiCreateRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SoftQuota == input.SoftQuota ||
                    (this.SoftQuota != null &&
                    this.SoftQuota.Equals(input.SoftQuota))
                ) && 
                (
                    this.Path == input.Path ||
                    (this.Path != null &&
                    this.Path.Equals(input.Path))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SoftQuota != null)
                    hashCode = hashCode * 59 + this.SoftQuota.GetHashCode();
                if (this.Path != null)
                    hashCode = hashCode * 59 + this.Path.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                return hashCode;
            }
        }
    }

}
