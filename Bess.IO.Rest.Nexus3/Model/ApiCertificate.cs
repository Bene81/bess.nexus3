/* 
 * Nexus Repository Manager REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.30.1-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Bess.IO.Rest.Nexus3.Client.SwaggerDateConverter;

namespace Bess.IO.Rest.Nexus3.Model
{
    /// <summary>
    /// ApiCertificate
    /// </summary>
    [DataContract]
    public partial class ApiCertificate :  IEquatable<ApiCertificate>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApiCertificate" /> class.
        /// </summary>
        /// <param name="expiresOn">expiresOn.</param>
        /// <param name="fingerprint">fingerprint.</param>
        /// <param name="id">id.</param>
        /// <param name="issuedOn">issuedOn.</param>
        /// <param name="issuerCommonName">issuerCommonName.</param>
        /// <param name="issuerOrganization">issuerOrganization.</param>
        /// <param name="issuerOrganizationalUnit">issuerOrganizationalUnit.</param>
        /// <param name="pem">pem.</param>
        /// <param name="serialNumber">serialNumber.</param>
        /// <param name="subjectCommonName">subjectCommonName.</param>
        /// <param name="subjectOrganization">subjectOrganization.</param>
        /// <param name="subjectOrganizationalUnit">subjectOrganizationalUnit.</param>
        public ApiCertificate(long? expiresOn = default(long?), string fingerprint = default(string), string id = default(string), long? issuedOn = default(long?), string issuerCommonName = default(string), string issuerOrganization = default(string), string issuerOrganizationalUnit = default(string), string pem = default(string), string serialNumber = default(string), string subjectCommonName = default(string), string subjectOrganization = default(string), string subjectOrganizationalUnit = default(string))
        {
            this.ExpiresOn = expiresOn;
            this.Fingerprint = fingerprint;
            this.Id = id;
            this.IssuedOn = issuedOn;
            this.IssuerCommonName = issuerCommonName;
            this.IssuerOrganization = issuerOrganization;
            this.IssuerOrganizationalUnit = issuerOrganizationalUnit;
            this.Pem = pem;
            this.SerialNumber = serialNumber;
            this.SubjectCommonName = subjectCommonName;
            this.SubjectOrganization = subjectOrganization;
            this.SubjectOrganizationalUnit = subjectOrganizationalUnit;
        }
        
        /// <summary>
        /// Gets or Sets ExpiresOn
        /// </summary>
        [DataMember(Name="expiresOn", EmitDefaultValue=false)]
        public long? ExpiresOn { get; set; }

        /// <summary>
        /// Gets or Sets Fingerprint
        /// </summary>
        [DataMember(Name="fingerprint", EmitDefaultValue=false)]
        public string Fingerprint { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets IssuedOn
        /// </summary>
        [DataMember(Name="issuedOn", EmitDefaultValue=false)]
        public long? IssuedOn { get; set; }

        /// <summary>
        /// Gets or Sets IssuerCommonName
        /// </summary>
        [DataMember(Name="issuerCommonName", EmitDefaultValue=false)]
        public string IssuerCommonName { get; set; }

        /// <summary>
        /// Gets or Sets IssuerOrganization
        /// </summary>
        [DataMember(Name="issuerOrganization", EmitDefaultValue=false)]
        public string IssuerOrganization { get; set; }

        /// <summary>
        /// Gets or Sets IssuerOrganizationalUnit
        /// </summary>
        [DataMember(Name="issuerOrganizationalUnit", EmitDefaultValue=false)]
        public string IssuerOrganizationalUnit { get; set; }

        /// <summary>
        /// Gets or Sets Pem
        /// </summary>
        [DataMember(Name="pem", EmitDefaultValue=false)]
        public string Pem { get; set; }

        /// <summary>
        /// Gets or Sets SerialNumber
        /// </summary>
        [DataMember(Name="serialNumber", EmitDefaultValue=false)]
        public string SerialNumber { get; set; }

        /// <summary>
        /// Gets or Sets SubjectCommonName
        /// </summary>
        [DataMember(Name="subjectCommonName", EmitDefaultValue=false)]
        public string SubjectCommonName { get; set; }

        /// <summary>
        /// Gets or Sets SubjectOrganization
        /// </summary>
        [DataMember(Name="subjectOrganization", EmitDefaultValue=false)]
        public string SubjectOrganization { get; set; }

        /// <summary>
        /// Gets or Sets SubjectOrganizationalUnit
        /// </summary>
        [DataMember(Name="subjectOrganizationalUnit", EmitDefaultValue=false)]
        public string SubjectOrganizationalUnit { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApiCertificate {\n");
            sb.Append("  ExpiresOn: ").Append(ExpiresOn).Append("\n");
            sb.Append("  Fingerprint: ").Append(Fingerprint).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  IssuedOn: ").Append(IssuedOn).Append("\n");
            sb.Append("  IssuerCommonName: ").Append(IssuerCommonName).Append("\n");
            sb.Append("  IssuerOrganization: ").Append(IssuerOrganization).Append("\n");
            sb.Append("  IssuerOrganizationalUnit: ").Append(IssuerOrganizationalUnit).Append("\n");
            sb.Append("  Pem: ").Append(Pem).Append("\n");
            sb.Append("  SerialNumber: ").Append(SerialNumber).Append("\n");
            sb.Append("  SubjectCommonName: ").Append(SubjectCommonName).Append("\n");
            sb.Append("  SubjectOrganization: ").Append(SubjectOrganization).Append("\n");
            sb.Append("  SubjectOrganizationalUnit: ").Append(SubjectOrganizationalUnit).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApiCertificate);
        }

        /// <summary>
        /// Returns true if ApiCertificate instances are equal
        /// </summary>
        /// <param name="input">Instance of ApiCertificate to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApiCertificate input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ExpiresOn == input.ExpiresOn ||
                    (this.ExpiresOn != null &&
                    this.ExpiresOn.Equals(input.ExpiresOn))
                ) && 
                (
                    this.Fingerprint == input.Fingerprint ||
                    (this.Fingerprint != null &&
                    this.Fingerprint.Equals(input.Fingerprint))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.IssuedOn == input.IssuedOn ||
                    (this.IssuedOn != null &&
                    this.IssuedOn.Equals(input.IssuedOn))
                ) && 
                (
                    this.IssuerCommonName == input.IssuerCommonName ||
                    (this.IssuerCommonName != null &&
                    this.IssuerCommonName.Equals(input.IssuerCommonName))
                ) && 
                (
                    this.IssuerOrganization == input.IssuerOrganization ||
                    (this.IssuerOrganization != null &&
                    this.IssuerOrganization.Equals(input.IssuerOrganization))
                ) && 
                (
                    this.IssuerOrganizationalUnit == input.IssuerOrganizationalUnit ||
                    (this.IssuerOrganizationalUnit != null &&
                    this.IssuerOrganizationalUnit.Equals(input.IssuerOrganizationalUnit))
                ) && 
                (
                    this.Pem == input.Pem ||
                    (this.Pem != null &&
                    this.Pem.Equals(input.Pem))
                ) && 
                (
                    this.SerialNumber == input.SerialNumber ||
                    (this.SerialNumber != null &&
                    this.SerialNumber.Equals(input.SerialNumber))
                ) && 
                (
                    this.SubjectCommonName == input.SubjectCommonName ||
                    (this.SubjectCommonName != null &&
                    this.SubjectCommonName.Equals(input.SubjectCommonName))
                ) && 
                (
                    this.SubjectOrganization == input.SubjectOrganization ||
                    (this.SubjectOrganization != null &&
                    this.SubjectOrganization.Equals(input.SubjectOrganization))
                ) && 
                (
                    this.SubjectOrganizationalUnit == input.SubjectOrganizationalUnit ||
                    (this.SubjectOrganizationalUnit != null &&
                    this.SubjectOrganizationalUnit.Equals(input.SubjectOrganizationalUnit))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ExpiresOn != null)
                    hashCode = hashCode * 59 + this.ExpiresOn.GetHashCode();
                if (this.Fingerprint != null)
                    hashCode = hashCode * 59 + this.Fingerprint.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.IssuedOn != null)
                    hashCode = hashCode * 59 + this.IssuedOn.GetHashCode();
                if (this.IssuerCommonName != null)
                    hashCode = hashCode * 59 + this.IssuerCommonName.GetHashCode();
                if (this.IssuerOrganization != null)
                    hashCode = hashCode * 59 + this.IssuerOrganization.GetHashCode();
                if (this.IssuerOrganizationalUnit != null)
                    hashCode = hashCode * 59 + this.IssuerOrganizationalUnit.GetHashCode();
                if (this.Pem != null)
                    hashCode = hashCode * 59 + this.Pem.GetHashCode();
                if (this.SerialNumber != null)
                    hashCode = hashCode * 59 + this.SerialNumber.GetHashCode();
                if (this.SubjectCommonName != null)
                    hashCode = hashCode * 59 + this.SubjectCommonName.GetHashCode();
                if (this.SubjectOrganization != null)
                    hashCode = hashCode * 59 + this.SubjectOrganization.GetHashCode();
                if (this.SubjectOrganizationalUnit != null)
                    hashCode = hashCode * 59 + this.SubjectOrganizationalUnit.GetHashCode();
                return hashCode;
            }
        }
    }

}
