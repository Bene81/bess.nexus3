/* 
 * Nexus Repository Manager REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.30.1-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Bess.IO.Rest.Nexus3.Client.SwaggerDateConverter;

namespace Bess.IO.Rest.Nexus3.Model
{
    /// <summary>
    /// AzureBlobStoreApiAuthentication
    /// </summary>
    [DataContract]
    public partial class AzureBlobStoreApiAuthentication :  IEquatable<AzureBlobStoreApiAuthentication>
    {
        /// <summary>
        /// The type of Azure authentication to use.
        /// </summary>
        /// <value>The type of Azure authentication to use.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum AuthenticationMethodEnum
        {
            
            /// <summary>
            /// Enum ACCOUNTKEY for value: ACCOUNTKEY
            /// </summary>
            [EnumMember(Value = "ACCOUNTKEY")]
            ACCOUNTKEY = 1,
            
            /// <summary>
            /// Enum MANAGEDIDENTITY for value: MANAGEDIDENTITY
            /// </summary>
            [EnumMember(Value = "MANAGEDIDENTITY")]
            MANAGEDIDENTITY = 2
        }

        /// <summary>
        /// The type of Azure authentication to use.
        /// </summary>
        /// <value>The type of Azure authentication to use.</value>
        [DataMember(Name="authenticationMethod", EmitDefaultValue=false)]
        public AuthenticationMethodEnum AuthenticationMethod { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AzureBlobStoreApiAuthentication" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AzureBlobStoreApiAuthentication() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AzureBlobStoreApiAuthentication" /> class.
        /// </summary>
        /// <param name="authenticationMethod">The type of Azure authentication to use. (required).</param>
        /// <param name="accountKey">The account key..</param>
        public AzureBlobStoreApiAuthentication(AuthenticationMethodEnum authenticationMethod = default(AuthenticationMethodEnum), string accountKey = default(string))
        {
            // to ensure "authenticationMethod" is required (not null)
            if (authenticationMethod == null)
            {
                throw new InvalidDataException("authenticationMethod is a required property for AzureBlobStoreApiAuthentication and cannot be null");
            }
            else
            {
                this.AuthenticationMethod = authenticationMethod;
            }
            this.AccountKey = accountKey;
        }
        

        /// <summary>
        /// The account key.
        /// </summary>
        /// <value>The account key.</value>
        [DataMember(Name="accountKey", EmitDefaultValue=false)]
        public string AccountKey { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AzureBlobStoreApiAuthentication {\n");
            sb.Append("  AuthenticationMethod: ").Append(AuthenticationMethod).Append("\n");
            sb.Append("  AccountKey: ").Append(AccountKey).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AzureBlobStoreApiAuthentication);
        }

        /// <summary>
        /// Returns true if AzureBlobStoreApiAuthentication instances are equal
        /// </summary>
        /// <param name="input">Instance of AzureBlobStoreApiAuthentication to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AzureBlobStoreApiAuthentication input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AuthenticationMethod == input.AuthenticationMethod ||
                    (this.AuthenticationMethod != null &&
                    this.AuthenticationMethod.Equals(input.AuthenticationMethod))
                ) && 
                (
                    this.AccountKey == input.AccountKey ||
                    (this.AccountKey != null &&
                    this.AccountKey.Equals(input.AccountKey))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AuthenticationMethod != null)
                    hashCode = hashCode * 59 + this.AuthenticationMethod.GetHashCode();
                if (this.AccountKey != null)
                    hashCode = hashCode * 59 + this.AccountKey.GetHashCode();
                return hashCode;
            }
        }
    }

}
