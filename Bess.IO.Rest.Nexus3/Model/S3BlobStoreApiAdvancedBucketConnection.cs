/* 
 * Nexus Repository Manager REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.30.1-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Bess.IO.Rest.Nexus3.Client.SwaggerDateConverter;

namespace Bess.IO.Rest.Nexus3.Model
{
    /// <summary>
    /// S3BlobStoreApiAdvancedBucketConnection
    /// </summary>
    [DataContract]
    public partial class S3BlobStoreApiAdvancedBucketConnection :  IEquatable<S3BlobStoreApiAdvancedBucketConnection>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="S3BlobStoreApiAdvancedBucketConnection" /> class.
        /// </summary>
        /// <param name="endpoint">A custom endpoint URL for third party object stores using the S3 API..</param>
        /// <param name="signerType">An API signature version which may be required for third party object stores using the S3 API..</param>
        /// <param name="forcePathStyle">Setting this flag will result in path-style access being used for all requests..</param>
        public S3BlobStoreApiAdvancedBucketConnection(string endpoint = default(string), string signerType = default(string), bool? forcePathStyle = default(bool?))
        {
            this.Endpoint = endpoint;
            this.SignerType = signerType;
            this.ForcePathStyle = forcePathStyle;
        }
        
        /// <summary>
        /// A custom endpoint URL for third party object stores using the S3 API.
        /// </summary>
        /// <value>A custom endpoint URL for third party object stores using the S3 API.</value>
        [DataMember(Name="endpoint", EmitDefaultValue=false)]
        public string Endpoint { get; set; }

        /// <summary>
        /// An API signature version which may be required for third party object stores using the S3 API.
        /// </summary>
        /// <value>An API signature version which may be required for third party object stores using the S3 API.</value>
        [DataMember(Name="signerType", EmitDefaultValue=false)]
        public string SignerType { get; set; }

        /// <summary>
        /// Setting this flag will result in path-style access being used for all requests.
        /// </summary>
        /// <value>Setting this flag will result in path-style access being used for all requests.</value>
        [DataMember(Name="forcePathStyle", EmitDefaultValue=false)]
        public bool? ForcePathStyle { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class S3BlobStoreApiAdvancedBucketConnection {\n");
            sb.Append("  Endpoint: ").Append(Endpoint).Append("\n");
            sb.Append("  SignerType: ").Append(SignerType).Append("\n");
            sb.Append("  ForcePathStyle: ").Append(ForcePathStyle).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as S3BlobStoreApiAdvancedBucketConnection);
        }

        /// <summary>
        /// Returns true if S3BlobStoreApiAdvancedBucketConnection instances are equal
        /// </summary>
        /// <param name="input">Instance of S3BlobStoreApiAdvancedBucketConnection to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(S3BlobStoreApiAdvancedBucketConnection input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Endpoint == input.Endpoint ||
                    (this.Endpoint != null &&
                    this.Endpoint.Equals(input.Endpoint))
                ) && 
                (
                    this.SignerType == input.SignerType ||
                    (this.SignerType != null &&
                    this.SignerType.Equals(input.SignerType))
                ) && 
                (
                    this.ForcePathStyle == input.ForcePathStyle ||
                    (this.ForcePathStyle != null &&
                    this.ForcePathStyle.Equals(input.ForcePathStyle))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Endpoint != null)
                    hashCode = hashCode * 59 + this.Endpoint.GetHashCode();
                if (this.SignerType != null)
                    hashCode = hashCode * 59 + this.SignerType.GetHashCode();
                if (this.ForcePathStyle != null)
                    hashCode = hashCode * 59 + this.ForcePathStyle.GetHashCode();
                return hashCode;
            }
        }
    }

}
