/* 
 * Nexus Repository Manager REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.30.1-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Bess.IO.Rest.Nexus3.Client.SwaggerDateConverter;

namespace Bess.IO.Rest.Nexus3.Model
{
    /// <summary>
    /// ApiPrivilegeRepositoryViewRequest
    /// </summary>
    [DataContract]
    public partial class ApiPrivilegeRepositoryViewRequest :  IEquatable<ApiPrivilegeRepositoryViewRequest>
    {
        /// <summary>
        /// Defines Actions
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ActionsEnum
        {
            
            /// <summary>
            /// Enum READ for value: READ
            /// </summary>
            [EnumMember(Value = "READ")]
            READ = 1,
            
            /// <summary>
            /// Enum BROWSE for value: BROWSE
            /// </summary>
            [EnumMember(Value = "BROWSE")]
            BROWSE = 2,
            
            /// <summary>
            /// Enum EDIT for value: EDIT
            /// </summary>
            [EnumMember(Value = "EDIT")]
            EDIT = 3,
            
            /// <summary>
            /// Enum ADD for value: ADD
            /// </summary>
            [EnumMember(Value = "ADD")]
            ADD = 4,
            
            /// <summary>
            /// Enum DELETE for value: DELETE
            /// </summary>
            [EnumMember(Value = "DELETE")]
            DELETE = 5,
            
            /// <summary>
            /// Enum RUN for value: RUN
            /// </summary>
            [EnumMember(Value = "RUN")]
            RUN = 6,
            
            /// <summary>
            /// Enum ASSOCIATE for value: ASSOCIATE
            /// </summary>
            [EnumMember(Value = "ASSOCIATE")]
            ASSOCIATE = 7,
            
            /// <summary>
            /// Enum DISASSOCIATE for value: DISASSOCIATE
            /// </summary>
            [EnumMember(Value = "DISASSOCIATE")]
            DISASSOCIATE = 8,
            
            /// <summary>
            /// Enum ALL for value: ALL
            /// </summary>
            [EnumMember(Value = "ALL")]
            ALL = 9
        }


        /// <summary>
        /// A collection of actions to associate with the privilege, using BREAD syntax (browse,read,edit,add,delete,all) as well as &#39;run&#39; for script privileges.
        /// </summary>
        /// <value>A collection of actions to associate with the privilege, using BREAD syntax (browse,read,edit,add,delete,all) as well as &#39;run&#39; for script privileges.</value>
        [DataMember(Name="actions", EmitDefaultValue=false)]
        public List<ActionsEnum> Actions { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ApiPrivilegeRepositoryViewRequest" /> class.
        /// </summary>
        /// <param name="name">The name of the privilege.  This value cannot be changed..</param>
        /// <param name="description">description.</param>
        /// <param name="actions">A collection of actions to associate with the privilege, using BREAD syntax (browse,read,edit,add,delete,all) as well as &#39;run&#39; for script privileges..</param>
        /// <param name="format">The repository format (i.e &#39;nuget&#39;, &#39;npm&#39;) this privilege will grant access to (or * for all)..</param>
        /// <param name="repository">The name of the repository this privilege will grant access to (or * for all)..</param>
        public ApiPrivilegeRepositoryViewRequest(string name = default(string), string description = default(string), List<ActionsEnum> actions = default(List<ActionsEnum>), string format = default(string), string repository = default(string))
        {
            this.Name = name;
            this.Description = description;
            this.Actions = actions;
            this.Format = format;
            this.Repository = repository;
        }
        
        /// <summary>
        /// The name of the privilege.  This value cannot be changed.
        /// </summary>
        /// <value>The name of the privilege.  This value cannot be changed.</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }


        /// <summary>
        /// The repository format (i.e &#39;nuget&#39;, &#39;npm&#39;) this privilege will grant access to (or * for all).
        /// </summary>
        /// <value>The repository format (i.e &#39;nuget&#39;, &#39;npm&#39;) this privilege will grant access to (or * for all).</value>
        [DataMember(Name="format", EmitDefaultValue=false)]
        public string Format { get; set; }

        /// <summary>
        /// The name of the repository this privilege will grant access to (or * for all).
        /// </summary>
        /// <value>The name of the repository this privilege will grant access to (or * for all).</value>
        [DataMember(Name="repository", EmitDefaultValue=false)]
        public string Repository { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApiPrivilegeRepositoryViewRequest {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Actions: ").Append(Actions).Append("\n");
            sb.Append("  Format: ").Append(Format).Append("\n");
            sb.Append("  Repository: ").Append(Repository).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApiPrivilegeRepositoryViewRequest);
        }

        /// <summary>
        /// Returns true if ApiPrivilegeRepositoryViewRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of ApiPrivilegeRepositoryViewRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApiPrivilegeRepositoryViewRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Actions == input.Actions ||
                    this.Actions != null &&
                    this.Actions.SequenceEqual(input.Actions)
                ) && 
                (
                    this.Format == input.Format ||
                    (this.Format != null &&
                    this.Format.Equals(input.Format))
                ) && 
                (
                    this.Repository == input.Repository ||
                    (this.Repository != null &&
                    this.Repository.Equals(input.Repository))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Actions != null)
                    hashCode = hashCode * 59 + this.Actions.GetHashCode();
                if (this.Format != null)
                    hashCode = hashCode * 59 + this.Format.GetHashCode();
                if (this.Repository != null)
                    hashCode = hashCode * 59 + this.Repository.GetHashCode();
                return hashCode;
            }
        }
    }

}
